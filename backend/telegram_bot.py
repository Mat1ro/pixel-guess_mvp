import os
import logging
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# URL –≤–∞—à–µ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
WEB_APP_URL = os.getenv("WEB_APP_URL", "https://your-domain.com")
BOT_TOKEN = os.getenv("BOT_TOKEN", "YOUR_BOT_TOKEN_HERE")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Mini App
    keyboard = [
        [
            InlineKeyboardButton(
                text="üéÆ –ò–≥—Ä–∞—Ç—å –≤ Pixel Guess",
                web_app=WebAppInfo(url=WEB_APP_URL)
            )
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! üëã\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Pixel Guess - –∏–≥—Ä—É, –≥–¥–µ –Ω—É–∂–Ω–æ —É–≥–∞–¥–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã!\n\n"
        "üéØ –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã:\n"
        "‚Ä¢ –£ –≤–∞—Å –µ—Å—Ç—å 3 —Å–µ–∫—É–Ω–¥—ã\n"
        "‚Ä¢ –£–≥–∞–¥–∞–π—Ç–µ –∫—É–¥–∞ –ø–æ–π–¥–µ—Ç —Ü–µ–Ω–∞ - –≤–≤–µ—Ä—Ö –∏–ª–∏ –≤–Ω–∏–∑\n"
        "‚Ä¢ –í—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ —Ñ–∏—à–∫–∏ –∏ —Å–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É:",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await update.message.reply_text(
        "üéÆ <b>Pixel Guess - –ü–æ–º–æ—â—å</b>\n\n"
        "–≠—Ç–æ –∏–≥—Ä–∞ –Ω–∞ –∏–Ω—Ç—É–∏—Ü–∏—é –∏ —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ–∞–∫—Ü–∏–∏!\n\n"
        "<b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ò–≥—Ä–∞—Ç—å'\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏\n"
        "3. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫\n"
        "4. –ó–∞ 3 —Å–µ–∫—É–Ω–¥—ã —É–≥–∞–¥–∞–π—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ\n"
        "5. –í—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –∏–ª–∏ —Ç–µ—Ä—è–π—Ç–µ —Ñ–∏—à–∫–∏\n\n"
        "<b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å\n"
        "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (—Å–∫–æ—Ä–æ)",
        parse_mode='HTML'
    )

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main() 