{"ast":null,"code":"var _jsxFileName = \"/Users/boronoff/pixel-guess/frontend/src/components/Chart.tsx\";\nimport React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  data,\n  isBlurred = false\n}) => {\n  // Преобразуем данные для Recharts\n  const chartData = data.map((value, index) => ({\n    index,\n    price: value\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chart-container ${isBlurred ? \"blurred\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"index\",\n          axisLine: false,\n          tickLine: false,\n          tick: {\n            fill: \"#666\",\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          axisLine: false,\n          tickLine: false,\n          tick: {\n            fill: \"#666\",\n            fontSize: 12\n          },\n          domain: [\"dataMin - 10\", \"dataMax + 10\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: \"#00ff88\",\n          strokeWidth: 2,\n          dot: false,\n          activeDot: {\n            r: 4,\n            fill: \"#00ff88\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","ResponsiveContainer","jsxDEV","_jsxDEV","Chart","data","isBlurred","chartData","map","value","index","price","className","children","width","height","margin","top","right","left","bottom","dataKey","axisLine","tickLine","tick","fill","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","domain","type","stroke","strokeWidth","dot","activeDot","r","_c","$RefreshReg$"],"sources":["/Users/boronoff/pixel-guess/frontend/src/components/Chart.tsx"],"sourcesContent":["import React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\n\ninterface ChartProps {\n  data: number[];\n  isBlurred?: boolean;\n}\n\nconst Chart: React.FC<ChartProps> = ({ data, isBlurred = false }) => {\n  // Преобразуем данные для Recharts\n  const chartData = data.map((value, index) => ({\n    index,\n    price: value,\n  }));\n\n  return (\n    <div className={`chart-container ${isBlurred ? \"blurred\" : \"\"}`}>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20,\n          }}\n        >\n          <XAxis\n            dataKey=\"index\"\n            axisLine={false}\n            tickLine={false}\n            tick={{ fill: \"#666\", fontSize: 12 }}\n          />\n          <YAxis\n            axisLine={false}\n            tickLine={false}\n            tick={{ fill: \"#666\", fontSize: 12 }}\n            domain={[\"dataMin - 10\", \"dataMax + 10\"]}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"price\"\n            stroke=\"#00ff88\"\n            strokeWidth={2}\n            dot={false}\n            activeDot={{ r: 4, fill: \"#00ff88\" }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Chart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9E,MAAMC,KAA2B,GAAGA,CAAC;EAAEC,IAAI;EAAEC,SAAS,GAAG;AAAM,CAAC,KAAK;EACnE;EACA,MAAMC,SAAS,GAAGF,IAAI,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;IAC5CA,KAAK;IACLC,KAAK,EAAEF;EACT,CAAC,CAAC,CAAC;EAEH,oBACEN,OAAA;IAAKS,SAAS,EAAE,mBAAmBN,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAO,QAAA,eAC9DV,OAAA,CAACF,mBAAmB;MAACa,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAF,QAAA,eAC5CV,OAAA,CAACN,SAAS;QACRQ,IAAI,EAAEE,SAAU;QAChBS,MAAM,EAAE;UACNC,GAAG,EAAE,EAAE;UACPC,KAAK,EAAE,EAAE;UACTC,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE;QACV,CAAE;QAAAP,QAAA,gBAEFV,OAAA,CAACJ,KAAK;UACJsB,OAAO,EAAC,OAAO;UACfC,QAAQ,EAAE,KAAM;UAChBC,QAAQ,EAAE,KAAM;UAChBC,IAAI,EAAE;YAAEC,IAAI,EAAE,MAAM;YAAEC,QAAQ,EAAE;UAAG;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACF3B,OAAA,CAACH,KAAK;UACJsB,QAAQ,EAAE,KAAM;UAChBC,QAAQ,EAAE,KAAM;UAChBC,IAAI,EAAE;YAAEC,IAAI,EAAE,MAAM;YAAEC,QAAQ,EAAE;UAAG,CAAE;UACrCK,MAAM,EAAE,CAAC,cAAc,EAAE,cAAc;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACF3B,OAAA,CAACL,IAAI;UACHkC,IAAI,EAAC,UAAU;UACfX,OAAO,EAAC,OAAO;UACfY,MAAM,EAAC,SAAS;UAChBC,WAAW,EAAE,CAAE;UACfC,GAAG,EAAE,KAAM;UACXC,SAAS,EAAE;YAAEC,CAAC,EAAE,CAAC;YAAEZ,IAAI,EAAE;UAAU;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACQ,EAAA,GA3CIlC,KAA2B;AA6CjC,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}