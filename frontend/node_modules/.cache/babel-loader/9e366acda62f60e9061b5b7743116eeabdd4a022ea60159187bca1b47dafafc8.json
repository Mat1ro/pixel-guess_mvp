{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8000/api\";\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const gameApi = {\n  // Получить новый игровой раунд\n  async getNewGame() {\n    const response = await api.get(\"/game/new\");\n    return response.data;\n  },\n  // Отправить ответ пользователя\n  async submitAnswer(answer) {\n    const response = await api.post(\"/game/answer\", answer);\n    return response.data;\n  },\n  // Получить баланс пользователя\n  async getUserBalance() {\n    const response = await api.get(\"/user/balance\");\n    return response.data.balance;\n  },\n  // Обновить баланс пользователя\n  async updateUserBalance(newBalance) {\n    const response = await api.post(\"/user/balance\", {\n      new_balance: newBalance\n    });\n    return response.data.balance;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","gameApi","getNewGame","response","get","data","submitAnswer","answer","post","getUserBalance","balance","updateUserBalance","newBalance","new_balance"],"sources":["/Users/boronoff/pixel-guess/frontend/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\nimport { GameRound, AnswerRequest, AnswerResponse } from \"../types/game\";\n\nconst API_BASE_URL = \"http://localhost:8000/api\";\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport const gameApi = {\n  // Получить новый игровой раунд\n  async getNewGame(): Promise<GameRound> {\n    const response = await api.get<GameRound>(\"/game/new\");\n    return response.data;\n  },\n\n  // Отправить ответ пользователя\n  async submitAnswer(answer: AnswerRequest): Promise<AnswerResponse> {\n    const response = await api.post<AnswerResponse>(\"/game/answer\", answer);\n    return response.data;\n  },\n\n  // Получить баланс пользователя\n  async getUserBalance(): Promise<number> {\n    const response = await api.get<{ balance: number }>(\"/user/balance\");\n    return response.data.balance;\n  },\n\n  // Обновить баланс пользователя\n  async updateUserBalance(newBalance: number): Promise<number> {\n    const response = await api.post<{ balance: number }>(\"/user/balance\", {\n      new_balance: newBalance,\n    });\n    return response.data.balance;\n  },\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAG;EACrB;EACA,MAAMC,UAAUA,CAAA,EAAuB;IACrC,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAY,WAAW,CAAC;IACtD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMC,YAAYA,CAACC,MAAqB,EAA2B;IACjE,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACY,IAAI,CAAiB,cAAc,EAAED,MAAM,CAAC;IACvE,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMI,cAAcA,CAAA,EAAoB;IACtC,MAAMN,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAsB,eAAe,CAAC;IACpE,OAAOD,QAAQ,CAACE,IAAI,CAACK,OAAO;EAC9B,CAAC;EAED;EACA,MAAMC,iBAAiBA,CAACC,UAAkB,EAAmB;IAC3D,MAAMT,QAAQ,GAAG,MAAMP,GAAG,CAACY,IAAI,CAAsB,eAAe,EAAE;MACpEK,WAAW,EAAED;IACf,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACE,IAAI,CAACK,OAAO;EAC9B;AACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}